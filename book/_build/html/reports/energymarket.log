Traceback (most recent call last):
  File "/Users/Emman/opt/anaconda3/envs/env-jupyterbook/lib/python3.7/site-packages/jupyter_cache/executors/utils.py", line 56, in single_nb_execution
    record_timing=False,
  File "/Users/Emman/opt/anaconda3/envs/env-jupyterbook/lib/python3.7/site-packages/nbclient/client.py", line 1082, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/Emman/opt/anaconda3/envs/env-jupyterbook/lib/python3.7/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/Emman/opt/anaconda3/envs/env-jupyterbook/lib/python3.7/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/Users/Emman/opt/anaconda3/envs/env-jupyterbook/lib/python3.7/asyncio/base_events.py", line 587, in run_until_complete
    return future.result()
  File "/Users/Emman/opt/anaconda3/envs/env-jupyterbook/lib/python3.7/site-packages/nbclient/client.py", line 536, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
  File "/Users/Emman/opt/anaconda3/envs/env-jupyterbook/lib/python3.7/site-packages/nbclient/client.py", line 827, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/Users/Emman/opt/anaconda3/envs/env-jupyterbook/lib/python3.7/site-packages/nbclient/client.py", line 735, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply['content'])
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Geocoding an address
df_wesm_coded = pd.DataFrame({"PLACE":names[0:10]})
df_wesm_coded["LAT"] = None
df_wesm_coded["LON"] = None
geocode_result = []

for i in range(0, len(names[0:10]),1):
    geocode_result = gmap.geocode(names[i])
    try:
        lat = geocode_result[0]["geometry"]["location"]["lat"]
        lon = geocode_result[0]["geometry"]["location"]["lng"]
        df_wesm_coded.iat[i,df_wesm_coded.columns.get_loc("LAT")] = lat
        df_wesm_coded.iat[i,df_wesm_coded.columns.get_loc("LON")] = lon
    except Exception as e:
        lat = None
        lon = None
        #print('Error, skipping address...', e)

------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mApiError[0m                                  Traceback (most recent call last)
[0;32m<ipython-input-20-173ed53acc2a>[0m in [0;36m<module>[0;34m[0m
[1;32m      6[0m [0;34m[0m[0m
[1;32m      7[0m [0;32mfor[0m [0mi[0m [0;32min[0m [0mrange[0m[0;34m([0m[0;36m0[0m[0;34m,[0m [0mlen[0m[0;34m([0m[0mnames[0m[0;34m[[0m[0;36m0[0m[0;34m:[0m[0;36m10[0m[0;34m][0m[0;34m)[0m[0;34m,[0m[0;36m1[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 8[0;31m     [0mgeocode_result[0m [0;34m=[0m [0mgmap[0m[0;34m.[0m[0mgeocode[0m[0;34m([0m[0mnames[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      9[0m     [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     10[0m         [0mlat[0m [0;34m=[0m [0mgeocode_result[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m[[0m[0;34m"geometry"[0m[0;34m][0m[0;34m[[0m[0;34m"location"[0m[0;34m][0m[0;34m[[0m[0;34m"lat"[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m

[0;32m~/opt/anaconda3/envs/env-jupyterbook/lib/python3.7/site-packages/googlemaps/client.py[0m in [0;36mwrapper[0;34m(*args, **kwargs)[0m
[1;32m    354[0m     [0;32mdef[0m [0mwrapper[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    355[0m         [0margs[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m.[0m[0m_extra_params[0m [0;34m=[0m [0mkwargs[0m[0;34m.[0m[0mpop[0m[0;34m([0m[0;34m"extra_params"[0m[0;34m,[0m [0;32mNone[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 356[0;31m         [0mresult[0m [0;34m=[0m [0mfunc[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    357[0m         [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    358[0m             [0;32mdel[0m [0margs[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m.[0m[0m_extra_params[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/opt/anaconda3/envs/env-jupyterbook/lib/python3.7/site-packages/googlemaps/geocoding.py[0m in [0;36mgeocode[0;34m(client, address, components, bounds, region, language)[0m
[1;32m     66[0m         [0mparams[0m[0;34m[[0m[0;34m"language"[0m[0;34m][0m [0;34m=[0m [0mlanguage[0m[0;34m[0m[0;34m[0m[0m
[1;32m     67[0m [0;34m[0m[0m
[0;32m---> 68[0;31m     [0;32mreturn[0m [0mclient[0m[0;34m.[0m[0m_request[0m[0;34m([0m[0;34m"/maps/api/geocode/json"[0m[0;34m,[0m [0mparams[0m[0;34m)[0m[0;34m[[0m[0;34m"results"[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     69[0m [0;34m[0m[0m
[1;32m     70[0m [0;34m[0m[0m

[0;32m~/opt/anaconda3/envs/env-jupyterbook/lib/python3.7/site-packages/googlemaps/client.py[0m in [0;36m_request[0;34m(self, url, params, first_request_time, retry_counter, base_url, accepts_clientid, extract_body, requests_kwargs, post_json)[0m
[1;32m    251[0m                 [0mresult[0m [0;34m=[0m [0mextract_body[0m[0;34m([0m[0mresponse[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    252[0m             [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 253[0;31m                 [0mresult[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_get_body[0m[0;34m([0m[0mresponse[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    254[0m             [0mself[0m[0;34m.[0m[0msent_times[0m[0;34m.[0m[0mappend[0m[0;34m([0m[0mtime[0m[0;34m.[0m[0mtime[0m[0;34m([0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    255[0m             [0;32mreturn[0m [0mresult[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/opt/anaconda3/envs/env-jupyterbook/lib/python3.7/site-packages/googlemaps/client.py[0m in [0;36m_get_body[0;34m(self, response)[0m
[1;32m    278[0m         [0;32mif[0m [0;34m"error_message"[0m [0;32min[0m [0mbody[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    279[0m             raise googlemaps.exceptions.ApiError(api_status,
[0;32m--> 280[0;31m                     body["error_message"])
[0m[1;32m    281[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    282[0m             [0;32mraise[0m [0mgooglemaps[0m[0;34m.[0m[0mexceptions[0m[0;34m.[0m[0mApiError[0m[0;34m([0m[0mapi_status[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;31mApiError[0m: REQUEST_DENIED (The provided API key is expired.)
ApiError: REQUEST_DENIED (The provided API key is expired.)

